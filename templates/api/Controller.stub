<?php

namespace $NAMESPACE_API_CONTROLLER$;

use App\Http\Requests\Create$MODEL_NAME$Request;
use App\Http\Requests\Update$MODEL_NAME$Request;
use App\Services\$MODEL_NAME$Service;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class $MODEL_NAME$Controller extends BaseController
{
    /**
     * Display a listing of the $MODEL_NAME$.
     * GET|HEAD /$MODEL_NAME_PLURAL_CAMEL$
     *
     * @param Request $request
     * @param $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service
     * @return JsonResponse
     */
    public function index(Request $request, $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service)
    {
        $$MODEL_NAME_PLURAL_CAMEL$ = $$MODEL_NAME_CAMEL$Service->all($request->all());

        return new JsonResponse($$MODEL_NAME_PLURAL_CAMEL$->toArray());
    }

    /**
     * Store a newly created $MODEL_NAME$.
     * POST /$MODEL_NAME_PLURAL_CAMEL$
     *
     * @param Create$MODEL_NAME$Request $request
     *
     * @param $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service
     * @return JsonResponse
     */
    public function store(Create$MODEL_NAME$Request $request, $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service)
    {
        $$MODEL_NAME_CAMEL$ = $$MODEL_NAME_CAMEL$Service->create($request->all());

        return new JsonResponse($$MODEL_NAME_CAMEL$);
    }

    /**
     * Display the specified $MODEL_NAME$.
     * GET|HEAD /$MODEL_NAME_PLURAL_CAMEL$/{id}
     *
     * @param $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service
     * @param  int $id
     * @return JsonResponse
     */
    public function show($id, $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service)
    {
        $$MODEL_NAME_CAMEL$ = $$MODEL_NAME_CAMEL$Service->find($id);

        return new JsonResponse($$MODEL_NAME_CAMEL$);
    }

    /**
     * Update the specified $MODEL_NAME$.
     * PUT/PATCH /$MODEL_NAME_PLURAL_CAMEL$/{id}
     *
     * @param  int $id
     * @param Update$MODEL_NAME$Request $request
     *
     * @param $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service
     * @return JsonResponse
     */
    public function update($id, Update$MODEL_NAME$Request $request, $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service)
    {
        $result = $$MODEL_NAME_CAMEL$Service->updateRich($request->all(), $id);

        if ($result == false) {
        }

        return new JsonResponse("$MODEL_NAME$ Updated successfully");
    }

    /**
     * Remove the specified $MODEL_NAME$ from storage.
     * DELETE /$MODEL_NAME_PLURAL_CAMEL$/{id}
     *
     * @param  int $id
     *
     * @param $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service
     * @return JsonResponse
     */
    public function destroy($id, $MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service)
    {
        $$MODEL_NAME_CAMEL$Service->delete($id);

        return new JsonResponse("$MODEL_NAME$ deleted successfully");
    }
}
